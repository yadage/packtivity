name: CI/CD

on:
  push:
    branches:
    - master
  pull_request:
  # Run daily at 0:01 UTC
  schedule:
  - cron:  '1 0 * * *'
  workflow_dispatch:

jobs:
  test:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install -q .[celery]
        python -m pip install -q --upgrade pyflakes 'pytest>=3.6' pytest-cov python-coveralls
        python -m pip list

    - name: Lint with Pyflakes
      if: matrix.python-version == '3.10'
      run: |
        python -m pyflakes packtivity

    - name: Test with pytest
      run: |
        python -m pytest --cov=packtivity -vv

    - name: Run packtivity tests
      run: |
        packtivity-run tests/testspecs/noop-test.yml -p a_parameter=hello

    - name: Report coverage with Codecov
      if: github.event_name == 'push' && matrix.python-version == '3.10'
      uses: codecov/codecov-action@v2.1.0
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml
        flags: unittests

  docs:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install --ignore-installed -U -q --no-cache-dir -e .
        python -m pip install sphinx
        python -m pip list
        sudo apt-get update
        sudo apt-get -qq install pandoc

    - name: Test and build docs
      run: |
        cd docs
        make html
        cd ..
        touch docs/_build/html/.nojekyll

    - name: Deploy docs to GitHub Pages
      if: success() && github.event_name == 'push' && github.ref == 'refs/heads/master'
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/_build/html
        force_orphan: true
        user_name: 'github-actions[bot]'
        user_email: 'github-actions[bot]@users.noreply.github.com'
        commit_message: Deploy to GitHub pages

  docker:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build Docker image
      if: "!(startsWith(github.ref, 'refs/tags/'))"
      uses: docker/build-push-action@v1
      with:
        repository: yadage/packtivity
        dockerfile: Dockerfile
        tag_with_sha: true
        tag_with_ref: true
        push: false
    - name: List built images
      run: docker images
